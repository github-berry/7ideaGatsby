{"version":3,"file":"component---src-pages-home-client-js-98fdf1e4a3fcacf57ece.js","mappings":"6OAcAA,EAAAA,GAAAA,IAAe,CAACC,EAAAA,GAAUC,EAAAA,KAE1B,IA+GMC,EAAcC,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,kLAYXC,EAAeD,EAAAA,QAAAA,IAAAA,WAAH,oEAAGA,CAAH,6qBA2CZE,EAAQF,EAAAA,QAAAA,GAAAA,WAAH,6DAAGA,CAAH,yJAYLG,EAAYH,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,kCAITI,GAAQJ,EAAAA,EAAAA,SAAOK,EAAAA,GAAV,wEAAGL,CAAH,iEAOX,UAhK4B,YAC1BM,EAAAA,EAAAA,YAAU,WACRC,IAAAA,KAAS,CAAEC,SAAU,SACpB,IAEH,IAIMC,GAJOC,EAAAA,EAAAA,gBAlCJ,cAoCPC,UAAaC,MAEM,GAErB,OACE,gBAAC,EAAAC,SAAD,KACE,gBAACd,EAAD,CAAa,WAAS,WACpB,gBAACE,EAAD,KACE,uBAAKa,UAAU,gBACb,uBAAKA,UAAU,iBACb,gBAACZ,EAAD,eAEE,2BAFF,cAOJ,2BACE,uBAAKY,UAAU,kBACb,uBAAKA,UAAU,WAAf,qWAQA,qBAAGC,KAAK,IAAID,UAAU,gCAAtB,mBAMN,gBAAC,IAAD,CACEE,MAAM,EACNC,cAAe,EACfC,aAAc,GACdC,WAAY,CACVC,WAAW,GAEbC,SAAU,CACRC,MAAO,KACPC,sBAAsB,GAExBC,MAAO,CAAEC,QAAS,YAEjBC,OAAOC,KAAKlB,GAAQmB,KAAI,SAACC,EAAKC,GAE7B,IAAMC,EAAgB,gBADpBD,EAEIE,EAAiB,cAAgBF,EACjCG,GAAYC,EAAAA,EAAAA,GAChBzB,EAAOoB,GAAKG,GAAgBG,UAAUC,iBAElCD,GAAYD,EAAAA,EAAAA,GAASzB,EAAOoB,GAAKG,GAAgBG,WACjDE,GAAUC,EAAAA,EAAAA,IAAiBH,GAC3BI,EAAQ9B,EAAOoB,GAAKE,GAC1B,OACE,gBAAC,IAAD,CAAaF,IAAKC,GAChB,gBAAC3B,EAAD,KACE,gBAAC,EAAAqC,KAAD,CACEC,GAAG,gBACHC,MAAO,CAAEL,QAASA,EAASE,MAAOA,IAElC,gBAACnC,EAAD,CAAOuC,MAAOV","sources":["webpack://gatsby-starter-hello-world/./src/pages/homeClient.js"],"sourcesContent":["import React, { Fragment, useEffect } from \"react\"\nimport { Link } from \"gatsby\"\nimport { Swiper, SwiperSlide } from \"swiper/react\"\nimport \"swiper/css\"\nimport \"swiper/css/pagination\"\nimport SwiperCore, { Autoplay, Pagination } from \"swiper\"\nimport Aos from \"aos\"\nimport \"aos/dist/aos.css\"\nimport styled from \"styled-components\"\nimport \"normalize.css\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\nimport { convertToBgImage } from \"gbimage-bridge\"\n\nSwiperCore.use([Autoplay, Pagination])\n\nconst query = graphql`\n  {\n    allWpPage(filter: { uri: { eq: \"/client/\" } }) {\n      nodes {\n        clientPage1 {\n          clientname1\n          clientimage1 {\n            localFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n        clientPage2 {\n          clientname2\n          clientimage2 {\n            localFile {\n              childImageSharp {\n                gatsbyImageData\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nconst HomeClientComponent = () => {\n  useEffect(() => {\n    Aos.init({ duration: 1500 })\n  }, [])\n\n  const data = useStaticQuery(query)\n  const {\n    allWpPage: { nodes },\n  } = data\n  const client = nodes[0]\n\n  return (\n    <Fragment>\n      <HomeClients data-aos=\"fade-up\">\n        <ClientHeader>\n          <div className=\"cover-client\">\n            <div className=\"section-title\">\n              <Title>\n                Beloved\n                <br />\n                Clients.\n              </Title>\n            </div>\n          </div>\n          <div>\n            <div className=\"client-content\">\n              <div className=\"content\">\n                7 idea is a new startup company that offers IT solutions and\n                online marketing. We are trying to build a bigger team to answer\n                our business needs. As we are growing we are looking for people\n                to join us and build up our team and culture. Our service offers\n                a new cutting edge technology and we are able to move quickly to\n                catch up with the new technology.\n              </div>\n              <a href=\"#\" className=\"btn btn-outline-light btn-lg\">\n                More Clients\n              </a>\n            </div>\n          </div>\n        </ClientHeader>\n        <Swiper\n          loop={true}\n          slidesPerView={2}\n          spaceBetween={30}\n          pagination={{\n            clickable: true,\n          }}\n          autoplay={{\n            delay: 2500,\n            disableOnInteraction: false,\n          }}\n          style={{ padding: \"120px 0\" }}\n        >\n          {Object.keys(client).map((key, index) => {\n            ++index\n            const txtClientName = \"clientname\" + index\n            const txtClientImage = \"clientimage\" + index\n            const pathImage = getImage(\n              client[key][txtClientImage].localFile.childImageSharp\n            )\n            const localFile = getImage(client[key][txtClientImage].localFile)\n            const bgImage = convertToBgImage(localFile)\n            const title = client[key][txtClientName]\n            return (\n              <SwiperSlide key={index}>\n                <Thumbnail>\n                  <Link\n                    to=\"/clientDetail\"\n                    state={{ bgImage: bgImage, title: title }}\n                  >\n                    <Image image={pathImage} />\n                  </Link>\n                </Thumbnail>\n              </SwiperSlide>\n            )\n          })}\n        </Swiper>\n      </HomeClients>\n    </Fragment>\n  )\n}\n\nconst HomeClients = styled.div`\n  background-color: #d02020;\n  padding: 2rem;\n  margin: 2rem;\n  color: #fff;\n  position: relative;\n  z-index: 1;\n  @media only screen and (min-width: 1200px) {\n    padding: 120px;\n    margin: -120px 120px 120px;\n  }\n`\nconst ClientHeader = styled.div`\n  display: flex;\n  flex-direction: column;\n  -webkit-box-direction: normal;\n  -webkit-box-orient: vertical;\n  @media only screen and (min-width: 1200px) {\n    -webkit-box-orient: horizontal;\n\n    flex-direction: row;\n    -webkit-box-align: center;\n    align-items: center;\n  }\n  & .cover-client {\n    display: block;\n    width: calc((100% - 2rem) / 2) !important;\n  }\n  & .btn-lg {\n    padding: 0.5rem 1rem;\n    font-size: 1.25rem;\n    line-height: 1.5;\n  }\n  & .btn-outline-light {\n    color: #f8f9fa;\n    border-color: #f8f9fa;\n    position: relative;\n    z-index: 0;\n    overflow: hidden;\n    border-width: 2px;\n  }\n  & .btn {\n    margin-top: 2rem;\n    border-radius: 0;\n    padding-left: 2rem;\n    padding-right: 2rem;\n    transition: all 0.5s ease;\n    &:hover {\n      color: #333;\n      background-color: #fff;\n      border-color: #fff;\n      box-shadow: inset 300px 0 0 0 #fff;\n    }\n  }\n`\nconst Title = styled.h2`\n  width: 100%;\n  font-size: 3rem;\n  font-weight: 700;\n  margin: 0px 0px 8px;\n  @media only screen and (min-width: 1200px) {\n    font-size: 7.5rem;\n    // line-height: 1;\n    width: 600px;\n    display: block;\n  }\n`\nconst Thumbnail = styled.div`\n  overflow: hidden;\n  height: 30vw;\n`\nconst Image = styled(GatsbyImage)`\n  width: 100%;\n  height: 100%;\n  object-fit: fill;\n  object-position: top;\n`\n\nexport default HomeClientComponent\n"],"names":["SwiperCore","Autoplay","Pagination","HomeClients","styled","ClientHeader","Title","Thumbnail","Image","GatsbyImage","useEffect","Aos","duration","client","useStaticQuery","allWpPage","nodes","Fragment","className","href","loop","slidesPerView","spaceBetween","pagination","clickable","autoplay","delay","disableOnInteraction","style","padding","Object","keys","map","key","index","txtClientName","txtClientImage","pathImage","getImage","localFile","childImageSharp","bgImage","convertToBgImage","title","Link","to","state","image"],"sourceRoot":""}